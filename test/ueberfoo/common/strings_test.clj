(ns ueberfoo.common.strings-test
  (:use [ueberfoo.common.strings])
  (:use [clojure.test]))

(deftest test-substring-of?
  (is (true?  (substring-of? "" "")))
  (is (true?  (substring-of? "a" "a")))
  (is (true?  (substring-of? "a" "aa")))
  (is (true?  (substring-of? "a" "ab")))
  (is (true?  (substring-of? "a" "ba")))
  (is (true?  (substring-of? "a" "bab")))
  (is (true?  (substring-of? "cde" "abcdeba")))
  (is (true?  (substring-of? "ab" "abcdeba")))
  (is (true?  (substring-of? "ba" "abcdeba")))
  (is (true?  (substring-of? "ello, W" "hello, World!")))
  (is (true?  (substring-of? ".." "...")))
  (is (false? (substring-of? "aa" "a")))
  (is (false? (substring-of? "ab" "a")))
  (is (false? (substring-of? "ba" "a")))
  (is (false? (substring-of? "bab" "a")))
  (is (false? (substring-of? "abcdeba" "cde")))
  (is (false? (substring-of? "abcdeba" "ab")))
  (is (false? (substring-of? "abcdeba" "ba")))
  (is (false? (substring-of? "hello, World!" "ello, W")))
  (is (false? (substring-of? "..." "..")))
  (is (nil?   (substring-of? nil "asdf")))
  (is (nil?   (substring-of? "asdf" nil)))
  (is (nil?   (substring-of? nil nil))))
  

(deftest test-supstring-of?
  (is (true?  (supstring-of? "" "")))
  (is (true?  (supstring-of? "a" "a")))
  (is (false? (supstring-of? "a" "aa")))
  (is (false? (supstring-of? "a" "ab")))
  (is (false? (supstring-of? "a" "ba")))
  (is (false? (supstring-of? "a" "bab")))
  (is (false? (supstring-of? "cde" "abcdeba")))
  (is (false? (supstring-of? "ab" "abcdeba")))
  (is (false? (supstring-of? "ba" "abcdeba")))
  (is (false? (supstring-of? "ello, W" "hello, World!")))
  (is (false? (supstring-of? ".." "...")))
  (is (true?  (supstring-of? "aa" "a")))
  (is (true?  (supstring-of? "ab" "a")))
  (is (true?  (supstring-of? "ba" "a")))
  (is (true?  (supstring-of? "bab" "a")))
  (is (true?  (supstring-of? "abcdeba" "cde")))
  (is (true?  (supstring-of? "abcdeba" "ab")))
  (is (true?  (supstring-of? "abcdeba" "ba")))
  (is (true?  (supstring-of? "hello, World!" "ello, W")))
  (is (true?  (supstring-of? "..." "..")))
  (is (nil?   (supstring-of? nil "asdf")))
  (is (nil?   (supstring-of? "asdf" nil)))
  (is (nil?   (supstring-of? nil nil))))
